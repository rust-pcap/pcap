[package]
name = "pcap"
version = "1.1.0"
authors = ["Sean Bowe <ewillbefull@gmail.com>", "Wojciech Kozlowski <wk@wojciechkozlowski.eu>", "Hideki Sekine"]
edition = "2018"
description = "A packet capture API around pcap/wpcap"
keywords = ["pcap", "packet", "sniffing"]
readme = "README.md"
homepage = "https://github.com/rust-pcap/pcap"
repository = "https://github.com/rust-pcap/pcap"
documentation = "https://docs.rs/pcap"
license = "MIT OR Apache-2.0"
build = "build.rs"

[dependencies]
bitflags = "1.3"
libc = "0.2"
errno = "0.2"
tokio = { version = "1.0", features = ["net", "rt", "macros", "rt-multi-thread"], optional = true }
futures = { version = "0.3", optional = true }
gat-std = { version = "0.1.1", optional = true }
# This really belongs in [dev-dependencies], but we can't have optional dev-deps
# and this library would truncate the min support Rust version (MSRV)
etherparse = { version = "0.13.0", optional = true }

[target.'cfg(target_os = "windows")'.dependencies]
windows-sys = { version = "0.36.1", features = ["Win32_Foundation", "Win32_Networking_WinSock"] }

[target.'cfg(not(target_os = "windows"))'.dependencies]
# This really belongs in [dev-dependencies], but we can't have optional dev-deps
# and this library would truncate the min support Rust version (MSRV)
tun-tap = { version = "0.1.3", optional = true }

[dev-dependencies]
tempdir = "0.3"

[target.'cfg(target_os = "windows")'.dev-dependencies]
eui48 = "1.1"

[build-dependencies]
libloading = "0.6"
regex = "1"
pkg-config = "0.3"

[features]
# This feature enables access to the function Capture::stream.
# This is disabled by default, because it depends on a tokio
capture-stream = ["tokio", "futures", "windows-sys/Win32_System_Threading"]
tap-tests = ["tun-tap", "etherparse"]
lending-iter = ["gat-std"]
# an empty feature to detect if '--all-features' was set
all-features = []

[lib]
name = "pcap"

[[example]]
name = "easylisten"
path = "examples/easylisten.rs"

[[example]]
name = "getdevices"
path = "examples/getdevices.rs"

[[example]]
name = "getstatistics"
path = "examples/getstatistics.rs"

[[example]]
name = "iterprint"
path = "examples/iterprint.rs"

[[example]]
name = "lendingiterprint"
path = "examples/lendingiterprint.rs"
required-features = ["lending-iter"]

[[example]]
name = "listenlocalhost"
path = "examples/listenlocalhost.rs"

[[example]]
name = "nfbpfcompile"
path = "examples/nfbpfcompile.rs"

[[example]]
name = "savefile"
path = "examples/savefile.rs"

[[example]]
name = "sendqueue"
path = "examples/sendqueue.rs"

[[example]]
name = "streamecho"
path = "examples/streamecho.rs"
required-features = ["capture-stream"]

[[example]]
name = "streamlisten"
path = "examples/streamlisten.rs"
required-features = ["capture-stream"]

[[example]]
name = "streamlisten_mt"
path = "examples/streamlisten_mt.rs"
required-features = ["capture-stream"]

[package.metadata.docs.rs]
all-features = true
