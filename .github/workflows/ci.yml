name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 6 * * *"

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_VERBOSE: true
  CARGO_TERM_COLOR: always

jobs:
  cargo-test-stable-beta:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        toolchain: [stable, beta]
        profile: ['', --release]
        features: ['', '--all-features']
        exclude:
          # capture-stream is not supported on Windows.
          - os: windows-latest
            features: '--all-features'

    uses: ./.github/workflows/ci-steps.yml
    with:
      os: ${{ matrix.os }}
      toolchain: ${{ matrix.toolchain }}
      profile: ${{ matrix.profile }}
      features: ${{ matrix.features }}
    secrets:
      NPCAP_OEM_PASSWORD: ${{ secrets.NPCAP_OEM_PASSWORD }}
      NPCAP_OEM_USERNAME: ${{ secrets.NPCAP_OEM_USERNAME }}

  cargo-test-msrv:
    strategy:
      matrix:
        # rust < 1.54 does not work on macos >= 12:
        # https://rust-lang.zulipchat.com/#narrow/stream/182449-t-compiler.2Fhelp/topic/.E2.9C.94.20How.20can.20I.20fix.20Rust.201.2E53.2E0.20or.20earlier.20to.20run.20on.20macOS.2012.2E6.3F/near/299263887
        os: [windows-latest, ubuntu-latest, macos-11]
        toolchain: ["1.46.0"]
        profile: ['', --release]
        # capture-stream is not supported on compiler versions too old for Tokio.
        features: ['']

    uses: ./.github/workflows/ci-steps.yml
    with:
      os: ${{ matrix.os }}
      toolchain: ${{ matrix.toolchain }}
      profile: ${{ matrix.profile }}
      features: ${{ matrix.features }}
      msrv: true
    secrets:
      NPCAP_OEM_PASSWORD: ${{ secrets.NPCAP_OEM_PASSWORD }}
      NPCAP_OEM_USERNAME: ${{ secrets.NPCAP_OEM_USERNAME }}

  # nightly check is performed on ubuntu only.
  cargo-test-nightly:
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [nightly]
        profile: ['', --release]
        features: ['', '--all-features']

    uses: ./.github/workflows/ci-steps.yml
    with:
      os: ${{ matrix.os }}
      toolchain: ${{ matrix.toolchain }}
      profile: ${{ matrix.profile }}
      features: ${{ matrix.features }}
    secrets:
      NPCAP_OEM_PASSWORD: ${{ secrets.NPCAP_OEM_PASSWORD }}
      NPCAP_OEM_USERNAME: ${{ secrets.NPCAP_OEM_USERNAME }}
