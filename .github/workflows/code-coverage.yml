name: code-coverage

on:
  push:
    branches: [ main ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_VERBOSE: true
  CARGO_TERM_COLOR: always

jobs:
  code-coverage:
    runs-on: ubuntu-latest
    env:
      LLVM_PROFILE_FILE: target/debug/profraw/pcap-%p-%m.profraw
      RUSTFLAGS: -C instrument-coverage

    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Install libpcap (ubuntu)
        run: sudo apt-get install libpcap-dev
      - name: Select rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 'nightly'
          components: llvm-tools-preview
          override: true
      - name: Install grcov
        # This is slower, but the grcov-provided binary does not produce correct badges.
        run: cargo install grcov
      - name: cargo build
        run: cargo build --all-targets --all-features
      - name: cargo test
        run: cargo test  --all-targets --all-features --no-fail-fast
      - name: grcov
        run: >-
          grcov target/debug/profraw
          --binary-path ./target/debug/
          --output-types html
          --source-dir .
          --ignore-not-existing
          --ignore "build.rs"
          --ignore "tests/*"
          --ignore "examples/*"
          --excl-start "GRCOV_EXCL_START|mod tests \{"
          --excl-stop "GRCOV_EXCL_STOP"
          --output-path ./target/debug/coverage/
      - name: Check out code-coverage branch
        uses: actions/checkout@v2
        with:
          clean: false
          ref: code-coverage
      - name: Update, commit, and push
        run: |
          rm *.html
          cp -r ./target/debug/coverage/* ./
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "Code coverage for "$(git rev-parse --short origin/main)
          git push
